package com.aikax28.scp.client;

import java.io.File;
import java.util.List;
import org.junit.Assert;
import org.junit.Test;

/**
 *
 * @author aikax28
 */
@lombok.extern.slf4j.Slf4j
public class ScpClientTests {

//    @ClassRule
//    public static GenericContainer REDIS
//            = new GenericContainer("redis:3.2.8")
//                    .withExposedPorts(6379);
//
//    public static Consumer<CreateContainerCmd> cmd = e -> e.withPortBindings(new PortBinding(Ports.Binding.bindPort(10000), new ExposedPort(22)));
//
//    @ClassRule
//    public static GenericContainer SCP
//            = new GenericContainer(new ImageFromDockerfile("test-ssh-server")
//                    .withDockerfileFromBuilder(builder
//                            -> builder
//                            .from("ssh-server")
//                            .expose(22)
//                            .cmd("/usr/sbin/sshd", "-D")
//                            .build()))
//                    .withExposedPorts(22)
//                    .withCreateContainerCmdModifier(cmd);
    @Test
    public void testGetFiles() {

        ScpClient scpClient = new ScpClient();
        ScpClient.ScpConnectionInfo info = ScpClient.ScpConnectionInfo
                .builder()
                .hostname("localhost")
                .username("root")
                .rsaPrivateKeyFormatBase64("LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQ0KTUlJSktRSUJBQUtDQWdFQXZXOVZod1cyNWNic2lHZVhCUFdGY2VydTY3UWJITnAvY1QyRnFEbWNlV1VIcjBIaA0KWjNSc3g2WEp6c3hSVVRZMmxUUmo4VThRZzBqeUNyYnA1Ly9xbUtFclREaEVxTVlHY3ZrUW9lS21oQTVHVkJsQg0KSk5PdnhnNnRVL3Brb3Fjb2NiWER1am9uQnhXL0tpZG1pS2d2UVpSWEx3ejN3SDduZTZSTk53b0YrTmxuNDlmdg0KWDZtUTZ6c283NFVyeVlKOTFzUXlyUzQySTlibHQ0RVJEeGZ1blVnL1hKVTRzUWdpL0h6UlVvY0JUMUEzWTFsSQ0Kcmw2SVIyNGhZMUM4eldLdmIzeUY4MWV5bzdhTE9wSzVIKzJXUERoa3pjVEV0Nk1jSTNhaFVzRlBnM0VYYmhtVA0KcmJld3hxcU5LZXBKZWlRenlLMVZkZ2w1MHdGbThpVHlxbVFaSlpFWk50dTY2UkgwaS96dCs1V1BOOGxsSjBvVg0KVCtHN1lsOWN3YXVFcnp3TThDMFgzSlhob21Deml3RjBsRnJnbUp2OGl4UnZzd2crVXFLZEhjaWdxeTVnc0JxNQ0KdVNYTzhmOWNtOFZINFhOWHBzajFhZFljb2xnMFdGMVJSQ0NSb251Wm5wa2tOQlZMYzdReXdQcVcySFRzMTBveA0KM00wVTV5elBYazV3UENteG1MVUFsL0xSUkNiT1FuQkpVMTRuRWhqZTBYUEZ4RXJVMVhSb2tnT2x0Y3RlZjBaTg0Kek9ETXc2Tk1NMmVZa3ROd3JMQ0hpY0dtMy9zbm4zaHQ3WThNbERLclBlSjRVaW0yMzZZVGhHMmJTSzV5SlZnNw0KU09kT28xM3dwQmdPK3RSMXhoaW5uOGNXemhXenhzS0lWUTNCRWVaSG9WaHVJSGVUdDVLSWdCYTM5eGNDQXdFQQ0KQVFLQ0FnQjhFeWowdUFSMGVaZEJQSUJJeWpzdVF3OWNLR285dXNzUU01aVFkN09LTzJjT0hsdHhkR3N2Vk9KYQ0KWmE2NVA0WCtzZ0xuOGI1Q0R3d2hnbTZ2K3dvQUVFZ1lzeDRkWVI2bVBZWHNVbFI0V0JVdVRpQkI2N2pNUTU2NQ0KUzE2UXZtV2FITkJtOEdIUm5TZkpoMmI4Q1JSeW9xTjcrTVZwT25XSm9UTEY0dlhJYVRWSG9ZNXluTkNEa2dzYw0KM3Ard2E1emFoMFVkOHcrWTU4OHNJd2cyVjVsOVFPM25TUUdKeW1lSDhvVHp4ZU5Rdkp5YW9NY2ZGbUd5VDJyaw0KN3VQS3JtRno1eDZoSlFhbmZnK3hQSnF1VStJNzdUL3hHbmt5UWs1UzJBZVArWGVJQXhHeWxtUUl1ekM0M3NwNA0KOHJCUHBOaWFEeFhUcXg4MDJrMUFPbjBLcDJkaitCR0pFMkdzdzhzaWlldit4TTlzMUo1dEE1SUlqZW9qdWpjNg0KZGNrbmlKMHRIL3VzeWxaT21zSCs1Z0dwVXVJVlllSmNYbmJhMTd4MEdoaXV2aHlXdHRsbFRSeDN2VklRSHFGTg0KR1RXZTBGWXpYK2oydDZDYWZERWpHYkxWeVAzOVVyd012MFZrVUxPbWV4NU9EcmFEdjQ1Zkt1NHNab2pyRjROTA0KeTU4K0NSTitOampWVkk3UFhxV003cHR0aE10bkFWZ0xFYzc5T2xkQWNGVTQ0VjdmTkhWMlloYmVnQmtudHY2aw0KMGhFOXRXNHhab0NFU0ZNZXFCWEZDNDdaRDJvNzBDNjhvT2lPRVdINEN1NlZlaG9DUWhDUnZtcWgwUkljUW1jbQ0KYzQxVllrYlROaTBXZXV5RmU3MlBycWI3eUJEOE03MGk4WFdJYm9FNjJBTUZEWUgzOFFLQ0FRRUE0a0dHTWlKMw0KNmUwc0l3cVhWWTFhdGk1ZXQ4KzM3SU5HUUdzaExpK2JsRjVsSlBGWTVPVEhmMmlDNnBWanVuNHdld3VHakNQSg0KVEp6L1V6anRlMUMwNUhoSHQ3c1hqRk5YeDA1SEFDT1poWWFMaU8rMlNFZi9KV3JTVERPMTBRQnhneVNUb3dYWA0KKzEzeU5WYk9NeFBzMStSTHVTQUZHNzluV1JrRDVnQ0RyNVVYeldzS0J4eTFOWjZUSFJTWEJaeE5NQm9oU2RZNA0Kd1ZSM0dQL2hDTGUvU01xWkhxQ08rblFoQ1FCQ1RqRFRuWE5sODlYV1ZPTDVCTkNBZ21WMm1wZE02QVRkNWJJVA0KYlAwZUdySkFNcE8wMWJEdDNlbGlCVTRnMzhWU3VTeTgxVGI3S213WGtzQVNKRFQySXE0eTFjdk5KZVRIdjROSw0Ka01IaUprUWV4dE1MUHdLQ0FRRUExbGFmNnBkb3pkcjZMQ09ZUUJieExkZGJnbjI1bURQRHFZNk9nNnNVZytObA0KaXJnV242ZjBFallZTEllRFNHUUhBRDQwOHNTKzNlN0dBcVk0eWpOQXdGQno4UkxrTjZ1VVRIUzRoKytkSEltdw0KeWJ1QndJUUwrU1lCQm42QWhISEE5VmtJbEhQOTVTWEVvZWQrVDNlQXNzVmpNSGgwalB6MkxZYTByeEVJc2dVSQ0KcmlWTWVnUExpRlJpR1FDVEpWOVN6RFQ2MGhmZDRPclRTWjdsVnZFaDNaYXorTFduUUlwS3FJWTc1T1NSQjBydA0KVzZzSTF6VFVIWHFSekw3bGVlWCtvWXZsZXJIajlJcWI0NWdWakJCbFhxSVpLRkJ1OGQzS3ZnaTQ0YmNFS3VORw0KSFdBVXNKV2ppeU1JdXo4SXZaU1hvSnZHOS9MM0NXc1AxUEkxa2R4V0tRS0NBUUVBcjFPNVN1WmM2QUFyQUtoMw0KWnd0WHJPODM1TlpwSHpVRzNtcGwxdVY3ZVRqQXhpVGtEdE9lS0lQelZ4Y1dwZkNkWHV3cWdqUkZERUpvdExQYg0KaTRDWi9LV2NaYXJzYjRneDhEY2ZXK002VnpkUXIzZWFXRjY2UCtPTVBSS2hKT2xrRFF6dC94bExLZlc5K0VsaA0KRmtHdGVncm1Cdm5pRzROeDhhQXAzalN0MXdVQTRlUzlhNDk2ZUtkK05yMjYzZFVtRjAxWVdHQlJzTGJrWjVINQ0KYndqOGlNcStadlppZFlCQ0RUaVBLUW83SWJySDJYRHVXdTlicXJocnJTQTFEVXlMZ3d3cWE1Rlg3bEFpNE9zYQ0KUmxjaGZhcFNXWEU5elFDakJ1UmcyeS9vMEl4L2kzc2h0VTF6Z1cwdEF1amNhY0k1SWRFc1hLSy95SGNGNlVORw0KV2lvMmZ3S0NBUUJNaVQ0dFhNZVZ5bjNPeVI4U3M1NkhpZ0VwUlkvQ1k2bVlvRWtQaDBXYUd0Y2xnN3JBWkE3cA0KZWR1RCt4ZkwvN3ZvUUU1VDZpRmx5bDkyanJoMHEzeVJyNmpYQ3JIbmx5TXJjZnA2di90UU4zS2pkb3RNblZwUg0KSzFydVlMbXZrWmNmaFIxbE5VNFNSenhCdkJJRWVsM0FlRytFM1Y1eEFkcytRbjIramN5WEZPa1dsa2NLd3RRbw0KNkVqbk9LZFNqd2xYMWd0Q2ZqZENtMWU3VUR3QW9iWkFGQkpMMjBIUDhCSGN2NklmaCthcHZmMm40QmtXRDgwMg0KZ1pBU2xwQUd5VFAxcDZqWCtURzNIcyt2bzV6K0dOUzV5QlJIcXdFUzZPbitsY3ErL3NWRU0wZlVNWHp4MlYwKw0KejlITVd5UFozbmVPYUZIU05EWTJiTDZJZ2J6VFN1U1JBb0lCQVFET2phbjZtQlV4amh4YlI3WVBPR3VQUXNYQg0KdW54ZDgrYzlyd0x4Q1JMNDlFNU45dUZYNTFnc2hQU2NlTUhHWnFyYmtJRGNhRzliRzgzZmYzN2RtcjRWQWdIcA0KNFQzYmcwWUw1OVRHajlUamZLcitJNGFSams5V2J3MTBqK0dGd2RiVm1LWjRzc1JGMmFBdjlWRGF0UWpvUFRtWA0KdG5xclZPQW1ZNlRXd0VvZlMrVWNaN2VUaTZoLzRjbE5uaWtZZWU4NERkaEpYMHpINm9ZclU2STZxNDREMjdhZw0Kc25VM2llMkE0OGIzaEExaEw5RU9RM1YyOFV2NkpYM1Z1UjlDUU00ODU5bmhHMjYyMTN2Z1hlOTRFYXRML3FodA0KZ083eWROa053Q3ZEMjc1RXBBZGwvR1JOb256djVIWldlR2lJVHJReWJCNDJrVWcwbGJjakJxY09ISnpODQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==")
                .port(10000)
                .build();

        List<File> files = scpClient.getFile(info,
                                             "/tmp/SAMPLE*",
                                             "/tmp/");

        Assert.assertEquals(2, files.size());
    }

    @Test
    public void testGetFile() {

        ScpClient scpClient = new ScpClient();
        ScpClient.ScpConnectionInfo info = ScpClient.ScpConnectionInfo
                .builder()
                .hostname("localhost")
                .username("root")
                .rsaPrivateKeyFormatBase64("LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQ0KTUlJSktRSUJBQUtDQWdFQXZXOVZod1cyNWNic2lHZVhCUFdGY2VydTY3UWJITnAvY1QyRnFEbWNlV1VIcjBIaA0KWjNSc3g2WEp6c3hSVVRZMmxUUmo4VThRZzBqeUNyYnA1Ly9xbUtFclREaEVxTVlHY3ZrUW9lS21oQTVHVkJsQg0KSk5PdnhnNnRVL3Brb3Fjb2NiWER1am9uQnhXL0tpZG1pS2d2UVpSWEx3ejN3SDduZTZSTk53b0YrTmxuNDlmdg0KWDZtUTZ6c283NFVyeVlKOTFzUXlyUzQySTlibHQ0RVJEeGZ1blVnL1hKVTRzUWdpL0h6UlVvY0JUMUEzWTFsSQ0Kcmw2SVIyNGhZMUM4eldLdmIzeUY4MWV5bzdhTE9wSzVIKzJXUERoa3pjVEV0Nk1jSTNhaFVzRlBnM0VYYmhtVA0KcmJld3hxcU5LZXBKZWlRenlLMVZkZ2w1MHdGbThpVHlxbVFaSlpFWk50dTY2UkgwaS96dCs1V1BOOGxsSjBvVg0KVCtHN1lsOWN3YXVFcnp3TThDMFgzSlhob21Deml3RjBsRnJnbUp2OGl4UnZzd2crVXFLZEhjaWdxeTVnc0JxNQ0KdVNYTzhmOWNtOFZINFhOWHBzajFhZFljb2xnMFdGMVJSQ0NSb251Wm5wa2tOQlZMYzdReXdQcVcySFRzMTBveA0KM00wVTV5elBYazV3UENteG1MVUFsL0xSUkNiT1FuQkpVMTRuRWhqZTBYUEZ4RXJVMVhSb2tnT2x0Y3RlZjBaTg0Kek9ETXc2Tk1NMmVZa3ROd3JMQ0hpY0dtMy9zbm4zaHQ3WThNbERLclBlSjRVaW0yMzZZVGhHMmJTSzV5SlZnNw0KU09kT28xM3dwQmdPK3RSMXhoaW5uOGNXemhXenhzS0lWUTNCRWVaSG9WaHVJSGVUdDVLSWdCYTM5eGNDQXdFQQ0KQVFLQ0FnQjhFeWowdUFSMGVaZEJQSUJJeWpzdVF3OWNLR285dXNzUU01aVFkN09LTzJjT0hsdHhkR3N2Vk9KYQ0KWmE2NVA0WCtzZ0xuOGI1Q0R3d2hnbTZ2K3dvQUVFZ1lzeDRkWVI2bVBZWHNVbFI0V0JVdVRpQkI2N2pNUTU2NQ0KUzE2UXZtV2FITkJtOEdIUm5TZkpoMmI4Q1JSeW9xTjcrTVZwT25XSm9UTEY0dlhJYVRWSG9ZNXluTkNEa2dzYw0KM3Ard2E1emFoMFVkOHcrWTU4OHNJd2cyVjVsOVFPM25TUUdKeW1lSDhvVHp4ZU5Rdkp5YW9NY2ZGbUd5VDJyaw0KN3VQS3JtRno1eDZoSlFhbmZnK3hQSnF1VStJNzdUL3hHbmt5UWs1UzJBZVArWGVJQXhHeWxtUUl1ekM0M3NwNA0KOHJCUHBOaWFEeFhUcXg4MDJrMUFPbjBLcDJkaitCR0pFMkdzdzhzaWlldit4TTlzMUo1dEE1SUlqZW9qdWpjNg0KZGNrbmlKMHRIL3VzeWxaT21zSCs1Z0dwVXVJVlllSmNYbmJhMTd4MEdoaXV2aHlXdHRsbFRSeDN2VklRSHFGTg0KR1RXZTBGWXpYK2oydDZDYWZERWpHYkxWeVAzOVVyd012MFZrVUxPbWV4NU9EcmFEdjQ1Zkt1NHNab2pyRjROTA0KeTU4K0NSTitOampWVkk3UFhxV003cHR0aE10bkFWZ0xFYzc5T2xkQWNGVTQ0VjdmTkhWMlloYmVnQmtudHY2aw0KMGhFOXRXNHhab0NFU0ZNZXFCWEZDNDdaRDJvNzBDNjhvT2lPRVdINEN1NlZlaG9DUWhDUnZtcWgwUkljUW1jbQ0KYzQxVllrYlROaTBXZXV5RmU3MlBycWI3eUJEOE03MGk4WFdJYm9FNjJBTUZEWUgzOFFLQ0FRRUE0a0dHTWlKMw0KNmUwc0l3cVhWWTFhdGk1ZXQ4KzM3SU5HUUdzaExpK2JsRjVsSlBGWTVPVEhmMmlDNnBWanVuNHdld3VHakNQSg0KVEp6L1V6anRlMUMwNUhoSHQ3c1hqRk5YeDA1SEFDT1poWWFMaU8rMlNFZi9KV3JTVERPMTBRQnhneVNUb3dYWA0KKzEzeU5WYk9NeFBzMStSTHVTQUZHNzluV1JrRDVnQ0RyNVVYeldzS0J4eTFOWjZUSFJTWEJaeE5NQm9oU2RZNA0Kd1ZSM0dQL2hDTGUvU01xWkhxQ08rblFoQ1FCQ1RqRFRuWE5sODlYV1ZPTDVCTkNBZ21WMm1wZE02QVRkNWJJVA0KYlAwZUdySkFNcE8wMWJEdDNlbGlCVTRnMzhWU3VTeTgxVGI3S213WGtzQVNKRFQySXE0eTFjdk5KZVRIdjROSw0Ka01IaUprUWV4dE1MUHdLQ0FRRUExbGFmNnBkb3pkcjZMQ09ZUUJieExkZGJnbjI1bURQRHFZNk9nNnNVZytObA0KaXJnV242ZjBFallZTEllRFNHUUhBRDQwOHNTKzNlN0dBcVk0eWpOQXdGQno4UkxrTjZ1VVRIUzRoKytkSEltdw0KeWJ1QndJUUwrU1lCQm42QWhISEE5VmtJbEhQOTVTWEVvZWQrVDNlQXNzVmpNSGgwalB6MkxZYTByeEVJc2dVSQ0KcmlWTWVnUExpRlJpR1FDVEpWOVN6RFQ2MGhmZDRPclRTWjdsVnZFaDNaYXorTFduUUlwS3FJWTc1T1NSQjBydA0KVzZzSTF6VFVIWHFSekw3bGVlWCtvWXZsZXJIajlJcWI0NWdWakJCbFhxSVpLRkJ1OGQzS3ZnaTQ0YmNFS3VORw0KSFdBVXNKV2ppeU1JdXo4SXZaU1hvSnZHOS9MM0NXc1AxUEkxa2R4V0tRS0NBUUVBcjFPNVN1WmM2QUFyQUtoMw0KWnd0WHJPODM1TlpwSHpVRzNtcGwxdVY3ZVRqQXhpVGtEdE9lS0lQelZ4Y1dwZkNkWHV3cWdqUkZERUpvdExQYg0KaTRDWi9LV2NaYXJzYjRneDhEY2ZXK002VnpkUXIzZWFXRjY2UCtPTVBSS2hKT2xrRFF6dC94bExLZlc5K0VsaA0KRmtHdGVncm1Cdm5pRzROeDhhQXAzalN0MXdVQTRlUzlhNDk2ZUtkK05yMjYzZFVtRjAxWVdHQlJzTGJrWjVINQ0KYndqOGlNcStadlppZFlCQ0RUaVBLUW83SWJySDJYRHVXdTlicXJocnJTQTFEVXlMZ3d3cWE1Rlg3bEFpNE9zYQ0KUmxjaGZhcFNXWEU5elFDakJ1UmcyeS9vMEl4L2kzc2h0VTF6Z1cwdEF1amNhY0k1SWRFc1hLSy95SGNGNlVORw0KV2lvMmZ3S0NBUUJNaVQ0dFhNZVZ5bjNPeVI4U3M1NkhpZ0VwUlkvQ1k2bVlvRWtQaDBXYUd0Y2xnN3JBWkE3cA0KZWR1RCt4ZkwvN3ZvUUU1VDZpRmx5bDkyanJoMHEzeVJyNmpYQ3JIbmx5TXJjZnA2di90UU4zS2pkb3RNblZwUg0KSzFydVlMbXZrWmNmaFIxbE5VNFNSenhCdkJJRWVsM0FlRytFM1Y1eEFkcytRbjIramN5WEZPa1dsa2NLd3RRbw0KNkVqbk9LZFNqd2xYMWd0Q2ZqZENtMWU3VUR3QW9iWkFGQkpMMjBIUDhCSGN2NklmaCthcHZmMm40QmtXRDgwMg0KZ1pBU2xwQUd5VFAxcDZqWCtURzNIcyt2bzV6K0dOUzV5QlJIcXdFUzZPbitsY3ErL3NWRU0wZlVNWHp4MlYwKw0KejlITVd5UFozbmVPYUZIU05EWTJiTDZJZ2J6VFN1U1JBb0lCQVFET2phbjZtQlV4amh4YlI3WVBPR3VQUXNYQg0KdW54ZDgrYzlyd0x4Q1JMNDlFNU45dUZYNTFnc2hQU2NlTUhHWnFyYmtJRGNhRzliRzgzZmYzN2RtcjRWQWdIcA0KNFQzYmcwWUw1OVRHajlUamZLcitJNGFSams5V2J3MTBqK0dGd2RiVm1LWjRzc1JGMmFBdjlWRGF0UWpvUFRtWA0KdG5xclZPQW1ZNlRXd0VvZlMrVWNaN2VUaTZoLzRjbE5uaWtZZWU4NERkaEpYMHpINm9ZclU2STZxNDREMjdhZw0Kc25VM2llMkE0OGIzaEExaEw5RU9RM1YyOFV2NkpYM1Z1UjlDUU00ODU5bmhHMjYyMTN2Z1hlOTRFYXRML3FodA0KZ083eWROa053Q3ZEMjc1RXBBZGwvR1JOb256djVIWldlR2lJVHJReWJCNDJrVWcwbGJjakJxY09ISnpODQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==")
                .port(10000)
                .build();

        List<File> files = scpClient.getFile(info,
                                             "/tmp/SAMPLE_001.csv",
                                             "/tmp/SAMPLE_001_2.csv");

        Assert.assertEquals(1, files.size());
    }
}
